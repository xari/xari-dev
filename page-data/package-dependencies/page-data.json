{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/package-dependencies/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Ideas in Development"}},"mdx":{"id":"e2223acd-be44-57d8-ae50-7f6a85322bf3","excerpt":"In a recent post,  I queried the NPM Package Registry API  for data about the D3 package.\nI decided to expand on that post slightly with the addition of aâ€¦","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Analysing D3's Package Dependencies\",\n  \"date\": \"2022-01-31T00:00:00.000Z\",\n  \"description\": \"Visualising data from the NPM Package Registry API.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In a recent post, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../async-recursion\"\n  }, \"I queried the NPM Package Registry API\"), \" for data about the D3 package.\\nI decided to expand on that post slightly with the addition of a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://registry.npmjs.org/react/latest\"\n  }, \"force-directed graph\"), \" of D3\\u2019s dependencies.\"), mdx(\"p\", null, \"The benefit of the force-directed graph is that it shows us how packages can be inter-connected.\\nFor example; D3-Array is a dependency of D3, but it\\u2019s also a dependency of D3-Time, D3-Geo, and D3-Contour.\"), mdx(\"h2\", null, \"The inter-dependencies of D3\"), mdx(React.Fragment, null, mdx(ForceGraphChart, {\n    data: {\n      nodes: d3Pkg.nodes,\n      links: d3Pkg.links\n    },\n    mdxType: \"ForceGraphChart\"\n  }), mdx(ForceLegend, {\n    range: [0, 1, 2, 3],\n    title: \"Maximum degrees of separation from the D3 package\",\n    mdxType: \"ForceLegend\"\n  })), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Hint: Package names appear when hovering on a node.\\nClick-and-drag a node to get a better view of a particular package.\")), mdx(\"p\", null, \"The legend indicates the maximum number of degrees of separation that a package has from D3.\\nFor example, while D3-Array is a direct dependency of D3, it is also a dependency of D3-Time, D3-Geo, and D3-Contour \\u2014all of which are direct dependencies of D3 themselves.\\nTherefor, the maximum degrees of separation of D3-Array from D3 is 2. \"), mdx(\"p\", null, \"We can view these dependencies in a tree chart, or dendogram, shown below. \"), mdx(\"h2\", null, \"D3 Dependency Tree\"), mdx(\"br\", null), mdx(TreeChart, {\n    data: d3Pkg.tree,\n    mdxType: \"TreeChart\"\n  }), mdx(\"p\", null, \"I found it helpful to have both the tree view and the force-directed graph to fully-understand the nature of D3\\u2019s dependencies.\\nI plan to follow-up on this post with an analysis of a few other packages.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Analysing D3's Package Dependencies","date":"January 31, 2022","description":"Visualising data from the NPM Package Registry API."}}},"pageContext":{"slug":"/package-dependencies/","previous":{"fields":{"slug":"/async-recursion/"},"frontmatter":{"title":"Querying the NPM Package Registry API"}},"next":{"fields":{"slug":"/compare-dependencies/"},"frontmatter":{"title":"Comparing NPM Package Dependencies"}}}},
    "staticQueryHashes": ["1588037479","3000541721"]}